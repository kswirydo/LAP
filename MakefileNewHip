CC := g++
NVCC := nvcc
HIPCC := hipcc
AR := ar
INCLUDES  := 
CUDA_LIBS := -lcusparse -lcublas
NVCC_FLAGS := -arch=sm_80 -rdc=true 
FLAGS := -O3 -g
CFLAGS :=  -lgomp  
FLAGS_OMP := -mp=gpu -gpu=cc80 -fopenmp  -Minfo=mp
FLAGS_HIP := -D__HIP_PLATFORM_HCC__
LIBS_HIP := -L/rocm-5.1.0/lib -lrocsparse -L/opt/rocm-5.1.0/lib -lrocblas 
INCLUDES_HIP := -I/opt/rocm-5.1.0/include 
LIBS = -lm
SRC = simple_blas.c blas.c GS.c it_jacobi.c line_jacobi.c prec.c cg.c cg_driver2.c
OBJS := $(foreach f,$(SRC),$(f:%.c=%.o))
#OBJS = simple_blas.o blas.o GS.o it_jacobi.o line_jacobi.o prec.o cg.o cg_driver.o

SRCOMP = openmp_blas.c
OBJSOMP = openmp_blas.o
SRCCUDA = cuda_blas.cu devMem.c
SRCHIP = hip_blas.cpp devMem.cpp
#OBJSCUDA = cuda_blas.o cudaMem.o
OBJSCUDA := $(foreach f,$(SRCCUDA),$(f:%.cu=%.o))
OBJSHIP := $(foreach f,$(SRCHIP),$(f:%.cu=%.o))
OBJSORDERED = cudaMem.o  cuda_blas.o   simple_blas.o blas.o GS.o it_jacobi.o line_jacobi.o prec.o cg.o cg_driver2.o
OBJSORDERED_OMP =  simple_blas.o blas.o openmp_blas.o GS.o it_jacobi.o line_jacobi.o prec.o cg.o cg_driver2.o
OBJSORDERED_HIP =  simple_blas.o blas.o hip_blas.o GS.o it_jacobi.o line_jacobi.o prec.o cg.o devMem.o cg_driver2.o
# Rules                                                                         
all: $(OBJS) $(OBJSHIP)  lap_hip
#$(OBJS): $(SRC)
#	${CC} ${FLAGS} ${INCLUDES} -o $@ -c $<
%.o: %.c
	${CC} ${FLAGS} ${INCLUDES} -o $@ -c $<
%.o: %.cpp
	${HIPCC} ${FLAGS_HIP} ${INCLUDES_HIP} -o $@ -c $<
$(OBJSOMP): $(SRCOMP)
	${NVC} ${FLAGS_OMP} -o $@ -c $<

#lap: $(OBJS)
#	$(CC) -o $@ $(OBJS)
#lap: ${OBJSORDERED}
#	${NVCC} ${NVCC_FLAGS} ${CFLAGS} ${INCLUDES} -o $@ ${OBJSORDERED} ${LIBS} ${CUDA_LIBS}
lap_hip: ${OBJSORDERED_HIP}
	${HIPCC} ${FLAGS_HIP} ${INCLUDES} -o $@ ${OBJSORDERED_HIP} ${LIBS} ${LIBS_HIP} 

